version: "3.6"
services:
#  frontend:
#    image: austinv11/discord4j:web-frontend
##    build: web-frontend
#    volumes:
#      - type: volume
#        source: frontend-data
#        target: /dist/
#        read_only: false
#        volume:
#          nocopy: false
##    restart: always Spams the logs if we do this
  frontend:
    image: austinv11/discord4j:web-old
#    build: web-frontend
    volumes:
      - type: volume
        source: frontend-data
        target: /dist/
        read_only: false
        volume:
          nocopy: false
#    restart: always Spams the logs if we do this

  nginx:
    depends_on:
      - frontend
    image: austinv11/discord4j:nginx #-nossl # nossl for testing
#    build: nginx
    volumes:
      - type: volume
        source: frontend-data
        target: /var/www/html/
        read_only: true
        volume:
          nocopy: false
      - ../nginx_data/:/cert
    restart: always
    ports:
      - 80:80
      - 443:443
#      - 1234:1234
#      - 2345:2345
#      - 3456:3456
#      - 4567:4567
#      - 5678:5678
#      - 9000:9000
#      - 2314:2314
    networks:
     nginx-net:

  database:
    image: postgres
    #build: database
    restart: always
#    ports:
#      - 5432:5432
    # Don't forget to set these environment variables!
    environment:
#      POSTGRES_PASSWORD: "$POSTGRES_PASSWORD"
      POSTGRES_USER: "postgres"
      PGDATA: "/var/lib/postgresql/data"
    volumes:
      - ../postgres_data/:/var/lib/postgresql/data
    networks:
     db-net:

  confluence:
    depends_on:
      - database
    image: austinv11/discord4j:confluence
    #build confluence
    restart: always
    ports:
      - 3456:8090
      - 3457:8091
    volumes:
      - ../confluence_data/confluence/:/var/atlassian/confluence
    networks:
     nginx-net:
     db-net:

  jira:
    depends_on:
      - database
    image: austinv11/discord4j:jira
    #build jira
    restart: always
    ports:
      - 2345:8080
    volumes:
      - ../jira_data/jira/:/var/atlassian/jira
    networks:
     nginx-net:
     db-net:

  jenkins:
    image: jenkinsci/blueocean:1.5.0
    restart: always
    ports:
      - 1234:8080
    volumes:
      - ../jenkins_data/:/var/jenkins_home
    networks:
     nginx-net:

  portainer:
    image: portainer/portainer
    restart: always
    ports:
      - 9000:9000
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ../portainer_data/:/data
    networks:
     nginx-net:

  webhook:
    depends_on:
      - nginx
    image: austinv11/discord4j:webhook
    restart: always
    ports:
      - 2314:2314

volumes:
  frontend-data:
networks:
  nginx-net:
  db-net: